@using nightowlsign.data.Models.Image
@model  ImageViewModel
@{
    ViewBag.Title = "NightOwl Sign System Images";
    ViewBag.SignId = Model.SearchSignId;
}
@section Scripts
{
        <script src="http://ajax.aspnetcdn.com/ajax/jquery.validate/1.11.1/jquery.validate.min.js"></script>
        <script src="https://ajax.aspnetcdn.com/ajax/jquery.validate/1.11.1/additional-methods.js"></script>
}


@if (Model.IsListAreaVisible)
{
    <div class="row">
        <div class="col-xs-6">
            <div class="alert">
                @Model.Message
                <button id="btnAdd" class="btn btn-sm btn-primary" data-pdsa-action="add" data-pdsa-val="@Model.SearchSignId">
                    <i class="glyphicon glyphicon-plus-sign"></i>&nbsp; Add image to gallery
                </button>
            </div>
        </div>
        <div class="col-xs-6">
            @using (Html.BeginForm("Show", "Image", FormMethod.Post))
            {
                <div class="alert pull-right">
                    <div class="form-group">
                        @Html.LabelFor(m => m.ImageToUpload.SignId, "Enter Sign Size to filter images ")
                        @Html.DropDownListFor(m => m.SearchSignId, new SelectList(Model.SignList, "SignId", "Model", Convert.ToInt32(Model.SearchSignId)), new { onchange = "this.form.submit();", @class = "form-control" })
                    </div>
                </div>
            }
        </div>
    </div>


    foreach (var item in Model.Images)
    {

        string imageBase64 = Convert.ToBase64String(item.ThumbNailSmall);
        string imageSrc = string.Format("data:image/gif;base64,{0}", imageBase64);
        <div class="col-sm-6 col-md-4">
            <div class="panel panel-default ">
                <div class="panel-body">
                    <div class="panel-info">
                        <a href="#" data-pdsa-action="edit" data-pdsa-val="@item.Id" class="btn btn-sm btn-default"><i class="glyphicon glyphicon-edit"></i></a>
                        <a href="#" data-pdsa-action="delete" data-pdsa-val="@item.Id" aria-hidden="true" class="btn btn-sm btn-default"><i class="glyphicon glyphicon-remove"></i></a>
                    </div>
                    <figure class="cap-left">
                        <div class="panel-image">
                            <a class="thumbnail" href="@item.ImageURL">
                                <img class="img-responsive myThumbnail" src="@imageSrc" style="width:180px;" alt="@item.Caption">
                            </a>
                            <figcaption>@item.Caption <br /> @item.Model </figcaption>
                        </div>
                    </figure>
                </div>
            </div>
        </div>
    }
}
<!-- End List Area-->
@using (Html.BeginForm("Index", "Image", FormMethod.Post, new { enctype = "multipart/form-data", id = "AddImage" }))
{
    <!-- Start Hidden form -->
    @Html.HiddenFor(m => m.EventCommand)
    @Html.HiddenFor(m => m.EventArgument)
    @Html.HiddenFor(m => m.Mode)
    @Html.HiddenFor(m => m.ImageToUpload.Url)

    if (Model.IsDetailVisible)
    {
        <div class="panel panel-primary">
            <div class="panel-heading">
                <h1 class="panel-title">
                    Images
                </h1>
            </div>
            <div class="panel-body">
                <!-- Begin Message Area -->
                <div class="row">
                    <div class="col-sm-12">
                        @if (!Model.IsValid)
                        {
                            <div class="alert alert-danger alert-dismissable" role="alert">
                                <button type="button" class="close" data-dissmiss="alert">
                                    <span aria-hidden="true">&times</span>

                                    <span class="sr-only">Close</span>
                                </button>
                                @Html.ValidationSummary(false)
                            </div>
                        }
                    </div>
                </div>
                <!-- End message Area-->
                @if (@Model.CommandString != "save")
                {
                    <div class="form-group">
                        <input capture="camera" accept="image/*" multiple id="fileupload" type="file" name="files" style="max-width: 800px; width: 400px;" class="btn btn-primary" />
                    </div>
                    <div class="well well-sm">
                        <div id="previewImg" name="previewImg"></div>
                    </div>
                }

                <div class="form-group">
                    @Html.HiddenFor(m => m.ImageToUpload.Id)
                    @Html.LabelFor(m => m.ImageToUpload.SignId, "Sign Size")
                    @Html.DropDownListFor(m => m.ImageToUpload.SignId, new SelectList(Model.SignList, "SignId", "Model", Convert.ToInt32(Model.EventArgument)), new { @class = "form-control" })
                </div>
            </div>
            <div class="panel-footer">
                <div class="row">
                    <div class="col-sm-12">

                        @if (!Model.ImageToUpload.Status)
                        {
                            <button class="btn btn-primary" id="btnSave" data-pdsa-action="@Model.CommandString">
                                <i class="glyphicon glyphicon-floppy-disk"></i>&nbsp; Save
                            </button>
                        }
                        else
                        {
                            @Html.ActionLink("Add Another Image", "Index", "Image", null, new { @class = "btn btn-primary" })
                        }
                        <button class="btn btn-primary" formnovalidate id="btnCancel" data-pdsa-action="cancel">
                            <i class="glyphicon glyphicon-remove-circle"></i>&nbsp;Cancel
                        </button>
                    </div>
                </div>
            </div>
        </div>
    }
}

<script type="text/javascript">
    $(document).ready(function () {

        $('#AddImage').validate({
            rules: {
                ImageToUpload_SignId: {
                    required: true
                }
            },
            highlight: function (element) {
                $(element).closest('.form-control').removeClass('success').addClass('error');
            },
            success: function (element) {
                element.text('Please select a sign size!').addClass('valid')
                    .closest('.form-control').removeClass('error').addClass('success');
            }
         });

        $("[rel='tooltip']").tooltip();

        $('.caption-over').hover(

        function () {
            $(this).find('.caption-over').slideDown(250);
        },

        function () {
            $(this).find('.caption-over').slideUp(250);
        });

    });


    function handleFileSelect(evt) {
        var files = evt.target.files; // FileList object
        // Loop through the FileList and render image files as thumbnails.
        for (var i = 0, f; f = files[i]; i++) {
            // Only process image files.
            if (!f.type.match('image.*')) {
                continue;
            }
            var reader = new FileReader();
            // Closure to capture the file information.
            reader.onload = (function (theFile) {
                return function (e) {
                    // Render thumbnail.
                    var span = document.createElement('span');
                    span.innerHTML = ['<img class="thumb" src="', e.target.result,
                        '" title="', escape(theFile.name), '"/>'].join('');
                    document.getElementById('previewImg').style.visibility = "visible";
                    document.getElementById('previewImg').insertBefore(span, null);
                };
            })(f);
            // Read in the image file as a data URL.
            reader.readAsDataURL(f);
        }
    }
    document.getElementById('fileupload').addEventListener('change', handleFileSelect, false);
</script>
